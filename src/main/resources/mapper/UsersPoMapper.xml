<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tss.apiservice.dao.UsersPoMapper">
    <resultMap id="BaseResultMap" type="com.tss.apiservice.po.UsersPo">
        <id column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="imagename" jdbcType="VARCHAR" property="imagename"/>
        <result column="orgid" jdbcType="VARCHAR" property="orgid"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
    </resultMap>
    <sql id="Base_Column_List">
    userid, username, password, nickname, imagepath, imagename, level, orgid
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where userid = #{userid,jdbcType=INTEGER}
    </select>

    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where 1 = 1
        <if test="username != null">
            and username like '%${username}%'
        </if>
        and orgid = #{orgid}
        order by userid
        <if test="startrow != null and pagesize != null">
            limit #{startrow} , #{pagesize}
        </if>
    </select>

    <select id="selectByNamePassword" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where userid = #{userid,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="com.tss.apiservice.po.UsersPo">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="imagepath != null">
                imagepath,
            </if>
            <if test="imagename != null">
                imagename,
            </if>
            <if test="orgid != null">
                orgid,
            </if>
            <if test="level != null">
                level,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="imagepath != null">
                #{imagepath,jdbcType=VARCHAR},
            </if>
            <if test="imagename != null">
                #{imagename,jdbcType=VARCHAR},
            </if>
            <if test="orgid != null">
                #{orgid,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tss.apiservice.po.UsersPo">
        update users
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="imagepath != null">
                imagepath = #{imagepath,jdbcType=VARCHAR},
            </if>
            <if test="imagename != null">
                imagename = #{imagename,jdbcType=VARCHAR},
            </if>
            <if test="orgid != null">
                orgid = #{orgid,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
        </set>
        where userid = #{userid,jdbcType=INTEGER}
    </update>

    <select id="selectOrgIdByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
        select orgid from users where userid = #{userid,jdbcType=INTEGER}
    </select>

    <select id="getAllNameByOrgId" parameterType="java.lang.String" resultType="java.lang.String">
        select
        username
        from users
        where orgid = #{orgId,jdbcType=VARCHAR}
        order by username
    </select>
</mapper>